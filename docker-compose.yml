volumes:
  db_storage:
  n8n_storage:
  redis_storage:

x-shared: &shared
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=n8n
    - DB_POSTGRESDB_USER=n8n
    - DB_POSTGRESDB_PASSWORD=n8n
    # - EXECUTIONS_MODE=queue
    # - QUEUE_BULL_REDIS_HOST=redis
    # - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=fdsafkdsjflkasjflkdsajfölkdsjfdsfdshfaiudszfewrjjlksjfusafö
    - WEBHOOK_URL=https://n8n.hartig.es
    - N8N_EDITOR_BASE_URL=https://n8n.hartig.es
    - N8N_TEMPLATES_ENABLED=true
    - N8N_HOST=n8n.hartig.es
    - N8N_COMMUNITY_PACKAGES_ENABLED=true
  links:
    - postgres
    # - redis
  volumes:
    - n8n_storage:/home/node/.n8n
  depends_on:
    # - redis
    - postgres

services:
  postgres:
    image: postgres:16
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
          - node.labels.database == true
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8n
      - POSTGRES_DB=n8n
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  # redis:
  #   image: redis:6-alpine
  #   deploy:
  #     replicas: 1
  #     restart_policy:
  #       condition: on-failure
  #   volumes:
  #     - redis_storage:/data
  #   healthcheck:
  #     test: ['CMD', 'redis-cli', 'ping']
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10

  n8n:
    <<: *shared
    networks:
      - default
      - traefik
    deploy:
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.stack.network=traefik"  

        - "traefik.http.routers.n8n.rule=Host(`n8n.hartig.es`)"
        - "traefik.http.routers.n8n.entrypoints=https"
        - "traefik.http.routers.n8n.tls=true"

        - "traefik.http.services.n8n.loadbalancer.server.port=5678"

        
        - "traefik.constraint=proxy-public"

  # n8n-worker:
  #   <<: *shared
  #   command: worker
  #   depends_on:
  #     - n8n
  #   deploy:
  #     replicas: 1

networks:
  traefik:
    external: true